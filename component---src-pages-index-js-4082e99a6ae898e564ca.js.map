{"version":3,"sources":["webpack://devblog/./src/components/Header.js","webpack://devblog/./src/components/Layout.js","webpack://devblog/./src/hooks/useSiteMetadata.js","webpack://devblog/./src/pages/index.js"],"names":["HeaderStyles","styled","Header","siteTitle","siteDescription","page","className","to","target","toLowerCase","Layout","children","useStaticQuery","site","siteMetadata","title","description","Background","data","console","log","allMdx","nodes","map","id","excerpt","frontmatter","fields","key","class","slug","cover","publicURL","G","image","childImageSharp","gatsbyImageData","alt","date"],"mappings":"kKAQMA,E,SAAeC,qBAAH,4DAAGA,CAAH,iHAkBLC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,gBAAiBC,EAA/B,EAA+BA,KAA/B,OACpB,gBAACL,EAAD,KACE,uBAAKM,UAAW,mBACd,uBAAKA,UAAW,cACd,gBAAC,KAAD,CAAMA,UAAW,WAAYC,GAAG,KAC9B,0BAAKJ,GACL,yBAAIC,MAKV,uBAAKE,UAAW,cACd,uBAAKA,UAAW,YACd,gBAAC,KAAD,CACEA,UAAW,OACXC,GAAG,gCACHC,OAAO,UAEP,wBAAMF,UAAW,aAAjB,MALF,cAKoD,wBAAMA,UAAW,aAAjB,SAEpD,gBAAC,KAAD,CACEA,UAAW,OACXC,GAAG,gCACHC,OAAO,UAHT,UAOA,gBAAC,KAAD,CACEF,UAAW,OACXC,GAAG,qDACHC,OAAO,UAHT,YAOA,gBAAC,KAAD,CACEF,UAAW,OACXC,GAAG,mCACHC,OAAO,UAHT,YAOA,gBAAC,KAAD,CACEF,UAAW,OACXC,GAAE,KAAe,SAATF,EAAkB,GAAKA,EAAKI,gBAEnCJ,IAGL,uBAAKC,UAAW,wB,wGC9DTI,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,GCTrBC,QAAe,cAAxBC,KAYIC,aDFJC,EAD8B,EAC9BA,MAAOC,EADuB,EACvBA,YACf,OACE,gCACE,wBAAMV,UAAW,cACf,gBAACJ,EAAA,EAAD,CACEC,UAAWY,EACXX,gBAAiBY,EACjBX,KAAM,UAEPM,M,qGEAHM,EAAahB,qBAAH,yDAAGA,CAAH,uUAwEhB,UApCuB,SAAC,GAAc,IAAZiB,EAAW,EAAXA,KAExB,OADAC,QAAQC,IAAI,OAAQF,GAElB,gBAACD,EAAD,KACE,gBAAC,IAAD,KACE,uBAAKX,UAAW,iBAEbY,EAAKG,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,OAA7B,OAGrB,uBAAKC,IAAKJ,EAAIlB,UAAW,YACvB,gBAAC,KAAD,CAAMuB,MAAO,oBAAqBtB,GAAIoB,EAAOG,MAC1CX,QAAQC,IACP,gDACAM,EAAYK,MAAMC,WAGpB,gBAAC,EAAAC,EAAD,CACE3B,UAAW,aACX4B,MAAOR,EAAYK,MAAMI,gBAAgBC,gBACzCC,IAAK,eAIP,sBAAI/B,UAAU,cAAcoB,EAAYX,OACxC,qBAAGT,UAAW,UAAWoB,EAAYY,MACrC,qBAAGhC,UAAW,UAAWmB,IAE3B,uBAAKnB,UAAW","file":"component---src-pages-index-js-4082e99a6ae898e564ca.js","sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport \"./index.css\";\n<style>\n  @import\n  url('https://fonts.googleapis.com/css2?family=Farro:wght@500&family=Raleway&display=swap');\n</style>;\nconst HeaderStyles = styled.header`\n  font-family: \"Raleway\", \"Farro\", sans-serif;\n  margin: 20px 0px 20px 0px;\n  .header-top {\n    // diplay: flex;\n    // flex-direction: column;\n    // align-items: center;\n    // justify-content: flex-start;\n    // p {\n    //   position: relative;\n    //   top: -20px;\n    // }\n    h1 {\n      margin: 0px 0px 20px 0px;\n    }\n  }\n`;\n\nexport const Header = ({ siteTitle, siteDescription, page }) => (\n  <HeaderStyles>\n    <div className={\"header-position\"}>\n      <div className={\"header-top\"}>\n        <Link className={\"top-link\"} to=\"/\">\n          <h1>{siteTitle}</h1>\n          <p>{siteDescription}</p>\n        </Link>\n      </div>\n    </div>\n\n    <div className={\"link-box-c\"}>\n      <div className={\"link-box\"}>\n        <Link\n          className={\"link\"}\n          to=\"https://caseyriley.github.io/\"\n          target=\"_blank\"\n        >\n          <span className={\"portfolio\"}>My</span> Portfolio <span className={\"portfolio\"}>Site</span>\n        </Link>\n        <Link\n          className={\"link\"}\n          to=\"https://github.com/caseyriley\"\n          target=\"_blank\"\n        >\n          Github\n        </Link>\n        <Link\n          className={\"link\"}\n          to=\"https://www.linkedin.com/in/casey-riley-3396231a1/\"\n          target=\"_blank\"\n        >\n          Linkedin\n        </Link>\n        <Link\n          className={\"link\"}\n          to=\"https://angel.co/u/casey-riley-1\"\n          target=\"_blank\"\n        >\n          Angelist\n        </Link>\n        <Link\n          className={\"link\"}\n          to={`/${page === \"Home\" ? \"\" : page.toLowerCase()}`}\n        >\n          {page}\n        </Link>\n      </div>\n      <div className={\"link-box-shadow\"} />\n    </div>\n  </HeaderStyles>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\";\nimport { Header } from \"./Header\";\n\n// const AppStyles = styled.main`\n//   margin: 0px 20px 20px 20px;\n//   height: 100vh;\n//   width: calc(100vw - 40px);\n//   overflow-y: scroll;\n// `;\n\nexport const Layout = ({ children }) => {\n  const { title, description } = useSiteMetadata();\n  return (\n    <>\n      <main className={\"app-styles\"}>\n        <Header\n          siteTitle={title}\n          siteDescription={description}\n          page={\"About\"}\n        />\n        {children}\n      </main>\n    </>\n  );\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  );\n  return site.siteMetadata;\n};\n","import { Link, graphql } from \"gatsby\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\n// import Img from 'gatsby-image';\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Layout } from \"../components/Layout\";\n\nimport \"./index.css\";\nimport \"./mScreenW3000.css\";\nimport \"./mScreenW2500.css\";\nimport \"./mScreenW2000.css\";\nimport \"./mScreenW1500.css\";\nimport \"./mScreenW1000.css\";\nimport \"./mScreenW600.css\";\nimport \"./mScreenW500.css\";\nimport \"./mScreenW400.css\";\n\n<style>\n  @import\n  url('https://fonts.googleapis.com/css2?family=Farro:wght@500&family=Raleway&display=swap');\n</style>;\n\nconst Background = styled.main`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: linear-gradient(\n    to top right,\n    rgb(101, 115, 255),\n    rgb(114, 107, 246),\n    rgb(127, 99, 237),\n    rgb(139, 92, 228),\n    rgb(152, 84, 219),\n    rgb(165, 76, 210),\n    rgb(178, 68, 202),\n    rgb(191, 60, 193),\n    rgb(204, 52, 184),\n    rgb(216, 45, 175),\n    rgb(229, 37, 166),\n    rgb(242, 29, 157)\n  );\n`;\n\n// const IndexWrapper = styled.main`\n//   font-family: \"Raleway\", \"Farro\", sans-serif;\n//   margin: 20px 0px 20px 0px;\n// `;\n\n// const PostWrapper = styled.div`\n//   border: 2px solid green;\n// `;\n\n// const Image = styled(Img)`\n//   border-radius: 5px;\n// `;\n\nconst indexComponent = ({ data }) => {\n  console.log(\"data\", data);\n  return (\n    <Background>\n      <Layout>\n        <div className={\"index-wrapper\"}>\n          {/* <Dump data={data}></Dump> */}\n          {data.allMdx.nodes.map(({ id, excerpt, frontmatter, fields }) => (\n            // console.log(\"data.allMdx=======>\",data.allMdx)\n            // const image = frontmatter.cover.publicURL;\n            <div key={id} className={\"post-box\"}>\n              <Link class={\"link post-wrapper\"} to={fields.slug}>\n                {console.log(\n                  \"frontmatter.cover.childImageSharp.fixed=====>\",\n                  frontmatter.cover.publicURL\n                )}\n\n                <GatsbyImage\n                  className={\"post-image\"}\n                  image={frontmatter.cover.childImageSharp.gatsbyImageData}\n                  alt={\"blog-image\"}\n                />\n                {/* <img className={\"post-img\"} src={frontmatter.cover.publicURL} /> */}\n\n                <h1 className=\"blog-title\">{frontmatter.title}</h1>\n                <p className={\"blog-p\"}>{frontmatter.date}</p>\n                <p className={\"blog-p\"}>{excerpt}</p>\n              </Link>\n              <div className={\"post-box__shadow\"} />\n            </div>\n          ))}\n        </div>\n      </Layout>\n    </Background>\n  );\n};\nexport default indexComponent;\nexport const query = graphql`\n  query SITE_INDEX_QUERY {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 250)\n        frontmatter {\n          title\n          date(formatString: \"YYYY MMMM Do\")\n          cover {\n            publicURL\n            childImageSharp {\n              gatsbyImageData(\n                layout: CONSTRAINED\n                width: 800\n                formats: [AUTO, WEBP, AVIF]\n              )\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}