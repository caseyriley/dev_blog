{"version":3,"sources":["webpack://devblog/./src/components/Header.js","webpack://devblog/./src/components/Layout.js","webpack://devblog/./src/hooks/useSiteMetadata.js","webpack://devblog/./src/pages/index.js"],"names":["HeaderStyles","styled","Header","siteTitle","siteDescription","className","to","target","AppStyles","Layout","children","useStaticQuery","site","siteMetadata","title","description","IndexWrapper","PostWrapper","data","console","log","allMdx","nodes","map","id","excerpt","frontmatter","fields","key","class","slug","cover","publicURL","G","image","childImageSharp","gatsbyImageData","alt","date"],"mappings":"4KAQMA,EAAeC,uBAAH,4DAAGA,CAAH,wEAMLC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,gBAAd,OACpB,gBAACJ,EAAD,KACE,gBAAC,KAAD,CAAMK,UAAW,OAAQC,GAAG,KAC1B,0BAAMH,GACN,yBAAKC,IAEP,uBAAKC,UAAW,YACd,gBAAC,KAAD,CACEA,UAAW,OACXC,GAAG,gCACHC,OAAO,UAHT,qBAOA,gBAAC,KAAD,CACEF,UAAW,OACXC,GAAG,gCACHC,OAAO,UAHT,UAOA,gBAAC,KAAD,CACEF,UAAW,OACXC,GAAG,qDACHC,OAAO,UAHT,YAOA,gBAAC,KAAD,CACEF,UAAW,OACXC,GAAG,mCACHC,OAAO,UAHT,eCrCAC,EAAYP,qBAAH,6DAAGA,CAAH,wFAOFQ,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,GCTvBC,QAAe,cAAvBC,KAYKC,aDFJC,EAD8B,EAC9BA,MAAOC,EADuB,EACvBA,YACf,OACE,gCACE,gBAACP,EAAD,KACE,gBAACN,EAAD,CAAQC,UAAWW,EAAOV,gBAAiBW,IAC1CL,M,oGELHM,EAAef,qBAAH,2DAAGA,CAAH,wEAKZgB,EAAchB,oBAAH,0DAAGA,CAAH,MAsCjB,UAhCuB,SAAC,GAAc,IAAZiB,EAAW,EAAXA,KAExB,OADAC,QAAQC,IAAI,OAAQF,GAElB,gBAAC,IAAD,KACE,gBAACF,EAAD,KAEGE,EAAKG,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,OAA7B,OAGrB,gBAACV,EAAD,CAAaW,IAAKJ,GAChB,gBAAC,KAAD,CAAMK,MAAO,OAAQvB,GAAIqB,EAAOG,MAC7BX,QAAQC,IACP,gDACAM,EAAYK,MAAMC,WAGpB,gBAAC,EAAAC,EAAD,CACEC,MAAOR,EAAYK,MAAMI,gBAAgBC,gBACzCC,IAAK,eAIP,sBAAIhC,UAAU,cAAcqB,EAAYZ,OACxC,yBAAIY,EAAYY,MAChB,yBAAIb","file":"component---src-pages-index-js-7af8e3f500ec96919179.js","sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport \"./index.css\";\n<style>\n  @import\n  url('https://fonts.googleapis.com/css2?family=Farro:wght@500&family=Raleway&display=swap');\n</style>;\nconst HeaderStyles = styled.header`\n  font-family: \"Raleway\", \"Farro\", sans-serif;\n  margin: 20px 0px 20px 0px;\n  \n`;\n\nexport const Header = ({ siteTitle, siteDescription }) => (\n  <HeaderStyles>\n    <Link className={\"link\"} to=\"/\">\n      <h1 >{siteTitle}</h1>\n      <p >{siteDescription}</p>\n    </Link>\n    <div className={\"link-box\"}>\n      <Link\n        className={\"link\"}\n        to=\"https://caseyriley.github.io/\"\n        target=\"_blank\"\n      >\n        My Portfolio Site\n      </Link>\n      <Link\n        className={\"link\"}\n        to=\"https://github.com/caseyriley\"\n        target=\"_blank\"\n      >\n        Github\n      </Link>\n      <Link\n        className={\"link\"}\n        to=\"https://www.linkedin.com/in/casey-riley-3396231a1/\"\n        target=\"_blank\"\n      >\n        Linkedin\n      </Link>\n      <Link\n        className={\"link\"}\n        to=\"https://angel.co/u/casey-riley-1\"\n        target=\"_blank\"\n      >\n        Angelist\n      </Link>\n    </div>\n  </HeaderStyles>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\";\nimport { Header } from \"./Header\";\n\nconst AppStyles = styled.main`\n  margin: 0px 20px 20px 20px;\n  height: 100vh;\n  width: calc(100vw - 40px);\n  overflow-y: scroll;\n`;\n\nexport const Layout = ({ children }) => {\n  const { title, description } = useSiteMetadata();\n  return (\n    <>\n      <AppStyles>\n        <Header siteTitle={title} siteDescription={description} />\n        {children}\n      </AppStyles>\n    </>\n  );\n};\n","import {graphql, useStaticQuery} from 'gatsby';\n\nexport const useSiteMetadata = () => {\n  const {site} = useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    ` \n  );\n  return site.siteMetadata\n};","import { Link, graphql } from \"gatsby\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\n// import Img from 'gatsby-image';\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Layout } from \"../components/Layout\";\n\nimport \"./index.css\";\n<style>\n  @import\n  url('https://fonts.googleapis.com/css2?family=Farro:wght@500&family=Raleway&display=swap');\n</style>;\n\nconst IndexWrapper = styled.main`\n  font-family: \"Raleway\", \"Farro\", sans-serif;\n  margin: 20px 0px 20px 0px;\n`;\n\nconst PostWrapper = styled.div``;\n\n// const Image = styled(Img)`\n//   border-radius: 5px;\n// `;\n\nconst indexComponent = ({ data }) => {\n  console.log(\"data\", data);\n  return (\n    <Layout>\n      <IndexWrapper>\n        {/* <Dump data={data}></Dump> */}\n        {data.allMdx.nodes.map(({ id, excerpt, frontmatter, fields }) => (\n          // console.log(\"data.allMdx=======>\",data.allMdx)\n          // const image = frontmatter.cover.publicURL;\n          <PostWrapper key={id}>\n            <Link class={\"link\"} to={fields.slug}>\n              {console.log(\n                \"frontmatter.cover.childImageSharp.fixed=====>\",\n                frontmatter.cover.publicURL\n              )}\n\n              <GatsbyImage\n                image={frontmatter.cover.childImageSharp.gatsbyImageData}\n                alt={\"blog-image\"}\n              />\n              {/* <img className={\"post-img\"} src={frontmatter.cover.publicURL} /> */}\n\n              <h1 className=\"blog-title\">{frontmatter.title}</h1>\n              <p>{frontmatter.date}</p>\n              <p>{excerpt}</p>\n            </Link>\n          </PostWrapper>\n        ))}\n      </IndexWrapper>\n    </Layout>\n  );\n};\nexport default indexComponent;\nexport const query = graphql`\n  query SITE_INDEX_QUERY {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 250)\n        frontmatter {\n          title\n          date(formatString: \"YYYY MMMM Do\")\n          cover {\n            publicURL\n            childImageSharp {\n              gatsbyImageData(\n                layout: CONSTRAINED\n                width: 200\n                formats: [AUTO, WEBP, AVIF]\n              )\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}