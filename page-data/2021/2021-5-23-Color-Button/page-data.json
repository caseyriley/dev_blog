{"componentChunkName":"component---src-templates-blog-post-template-js","path":"/2021/2021-5-23-Color-Button/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CSS Gradient Selector\",\n  \"date\": \"2021-05-23T00:00:00.000Z\",\n  \"published\": true,\n  \"cover\": \"./colors-ic.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A fun React component for making color gradients I made while learning an application called Storybook :) \", mdx(\"br\", null), \"\\nClick on any color below, then click a second color. Keep clicking! \", mdx(\"br\", null), \"\\nThis is also a fun tool for learning all of CSS's built in color names.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"react-live\",\n    \"react-live\": true\n  }, \"function ColorButton() {\\n  const [colorState, setColorState] = React.useState(\\\"green\\\");\\n  const [indexState, setIndexState] = React.useState(0);\\n  const [selectStateA, setSelectStateA] = React.useState(\\\"aqua\\\");\\n  const [selectStateB, setSelectStateB] = React.useState(\\\"lightpink\\\");\\n  const [pickerState, setPickerState] = React.useState(false);\\n  function pickColor(color) {\\n    let state = !pickerState;\\n    if (state) setSelectStateA(color);\\n    else setSelectStateB(color);\\n    setPickerState(state);\\n  }\\n  let colors = React.useRef([\\n    \\\"white\\\",\\n    \\\"silver\\\",\\n    \\\"grey\\\",\\n    \\\"black\\\",\\n    \\\"red\\\",\\n    \\\"maroon\\\",\\n    \\\"yellow\\\",\\n    \\\"olive\\\",\\n    \\\"lime\\\",\\n    \\\"green\\\",\\n    \\\"aqua\\\",\\n    \\\"teal\\\",\\n    \\\"blue\\\",\\n    \\\"navy\\\",\\n    \\\"fuchsia\\\",\\n    \\\"purple\\\",\\n    \\\"mediumvioletred\\\",\\n    \\\"deeppink\\\",\\n    \\\"palevioletred\\\",\\n    \\\"hotpink\\\",\\n    \\\"lightpink\\\",\\n    \\\"pink\\\",\\n    \\\"darkred\\\",\\n    \\\"red\\\",\\n    \\\"firebrick\\\",\\n    \\\"crimson\\\",\\n    \\\"indianred\\\",\\n    \\\"lightcoral\\\",\\n    \\\"salmon\\\",\\n    \\\"darksalmon\\\",\\n    \\\"lightsalmon\\\",\\n    \\\"orangered\\\",\\n    \\\"tomato\\\",\\n    \\\"darkorange\\\",\\n    \\\"coral\\\",\\n    \\\"orange\\\",\\n    \\\"darkkhaki\\\",\\n    \\\"gold\\\",\\n    \\\"khaki\\\",\\n    \\\"peachpuff\\\",\\n    \\\"yellow\\\",\\n    \\\"moccasin\\\",\\n    \\\"papayawhip\\\",\\n    \\\"lightgoldenrodyellow\\\",\\n    \\\"lemonchiffon\\\",\\n    \\\"lightyellow\\\",\\n    \\\"maroon\\\",\\n    \\\"brown\\\",\\n    \\\"saddlebrown\\\",\\n    \\\"sienna\\\",\\n    \\\"chocolate\\\",\\n    \\\"peru\\\",\\n    \\\"rosybrown\\\",\\n    \\\"goldenrod\\\",\\n    \\\"sandybrown\\\",\\n    \\\"tan\\\",\\n    \\\"burlywood\\\",\\n    \\\"wheat\\\",\\n    \\\"navajowhite\\\",\\n    \\\"bisque\\\",\\n    \\\"blanchedalmond\\\",\\n    \\\"cornsilk\\\", \\\"darkgreen\\\", \\\"green\\\", \\\"darkolivegreen\\\", \\\"forestgreen\\\", \\\"seagreen\\\", \\\"olive\\\", \\\"olivedrab\\\", \\\"mediumseagreen\\\", \\\"limegreen\\\", \\\"lime\\\", \\\"springgreen\\\", \\\"mediumspringgreen\\\", \\\"darkseagreen\\\", \\\"mediumaquamarine\\\", \\\"yellowgreen\\\", \\\"chartreuse\\\", \\\"lightgreen\\\", \\\"greenyellow\\\", \\\"palegreen\\\"\\n  ]);\\n\\n  return (\\n    <>\\n      <div\\n        className={\\\"gradient\\\"}\\n        style={{\\n          background: `linear-gradient(to right,  ${selectStateA} 0%, ${selectStateB} 100%)`,\\n        }}\\n      >\\n        <span>{selectStateA}</span> <span>{selectStateB}</span>\\n      </div>\\n      <div className={\\\"swatch-box\\\"}>\\n        {colors.current.map((color, index) => {\\n          return (\\n            <div\\n              className={`color-button`}\\n              style={{ \\\"background-color\\\": `${color}` }}\\n              onClick={() => pickColor(color)}\\n            >\\n              {color}{\\\" \\\"}\\n            </div>\\n          );\\n        })}\\n      </div>\\n    </>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"CSS Gradient Selector","date":"2021 May 23rd"}}},"pageContext":{"slug":"/2021/2021-5-23-Color-Button/","previous":{"fields":{"slug":"/2021/2021-5-21-Like-Button/"},"frontmatter":{"title":"Like Button"}},"next":{"fields":{"slug":"/2021/2021-6-01-VolumeUiSlider/"},"frontmatter":{"title":"Mix Meld Volume Slider"}}}},"staticQueryHashes":["4080856488"]}